# Platform detection
ifeq ($(OS),Windows_NT)
	WINDOWS_TARGET = 1
else
	UNAME_S = $(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		LINUX_TARGET = 1
	endif
	ifeq ($(UNAME_S),Darwin)
		OSX_TARGET = 1
	endif
endif

# Default commands

ifdef WINDOWS_TARGET
	CC = cl
	CXX = cl
	CFPGA = aoc
	CFLAGS = /TP /EHsc
	ALTERA = 1
	RM = del /F /S /Q
else
	ALTERA = 1
	CC = gcc
	CXX = g++
	CFPGA = aoc
	
	ifdef DEBUG
		CFLAGS = -g -O0
	else
		CFLAGS = -g -O3 -Wall
	endif

	ifeq ($(CC),icc)
		CXX = icpc;
		CFLAGS   += -fp-model precise
		CXXFLAGS += -fp-model precise
	endif

	ifeq ($(CXX),icpc)
		CC = icc;
		CFLAGS   += -fp-model precise
		CXXFLAGS += -fp-model precise
	endif
	
	RM = rm -rf
endif

# Placeholder for all preprocessor macros. Will be appended to compiler flag variables 
DEFINE_MACROS = $(EXTRA_MACROS)

# Use single precision by default. Pass FP=DOUBLE for double precision.
ifeq ($(FP),DOUBLE)
	DEFINE_MACROS += -DFP_DOUBLE
else
	DEFINE_MACROS += -DFP_SINGLE
endif

CFLAGS += $(DEFINE_MACROS)

ifdef LINUX_TARGET
	COMMON_LIB = -lrt
else
	COMMON_LIB =
endif

CFLAGS += $(COMMON_LIB)
CXXFLAGS = $(CFLAGS)
LDFLAGS += $(COMMON_LIB)

### OpenMP ###

OPENMP_INC =
OPENMP_LIB = 
ifdef LINUX_TARGET
OPENMP_INC = -fopenmp
OPENMP_LIB = -fopenmp
endif

### CUDA ###

CUDA_CC = nvcc
CUDA_FLAGS = -Xcompiler -fopenmp -arch sm_35
ifdef DEBUG
      CUDA_FLAGS += -g
else
      CUDA_FLAGS += -O3
endif

ifdef LINUX_TARGET
      CUDA_HELPER_INC =  -I$(dir $(shell which $(CUDA_CC)))../samples/common/inc
endif
CUDA_FLAGS += $(CUDA_HELPER_INC)

### OpenCL ###

# Use the Apple OpenCL by default on OSX or if APPLE=1 is passed
ifneq "$(or $(OSX_TARGET),$(APPLE))" ""
	OPENCL_INC = 
	OPENCL_LIB = -framework OpenCL
	USE_JIT = 1
	OPENCL_MACROS += -DAPPLE
endif

# NVIDIA OpenCL SDK
ifdef NVIDIA
	OPENCL_DIR = /usr/local/cuda
	OPENCL_INC = -I$(OPENCL_DIR)/include
	OPENCL_LIB = -L$(OPENCL_DIR)/lib64 -lOpenCL
	USE_JIT = 1
	OPENCL_MACROS += -DNVIDIA
endif

# AMD OpenCL SDK
ifdef AMD
	OPENCL_DIR = $(AMDAPPSDKROOT)
	OPENCL_INC = -I$(OPENCL_DIR)/include/
	OPENCL_LIB = -L$(OPENCL_DIR)/lib/x86_64/ -lOpenCL
	USE_JIT = 1
	OPENCL_MACROS += -DAMD -Wno-deprecated-declarations
endif

#ifeq ($(shell uname -m), x86_64)
#     ifeq ($(shell if test -d $(OPENCL_DIR)/lib/x86_64/; then echo T; else echo F; fi), T)
#     	OPENCL_LIB = $(OPENCL_DIR)/lib/x86_64/
#     endif
#endif

# ALTERA OpenCL SDK
ifdef ALTERA
	USE_JIT = 0
	CFPGA_FLAGS = -g -v --report
	OPENCL_MACROS += -DALTERA
	
	ifeq ($(OS),Windows_NT)
		OPENCL_LIB = /link $(shell aocl link-config) /nodefaultlib:libcmt 
	else
		OPENCL_LIB = $(shell aocl link-config) -lOpenCL
		CFPGA_FLAGS += --board $(BOARD)
	endif
	
	OPENCL_INC = $(shell aocl compile-config)

	ifdef BOARD
		CFLAGS += -DAOCL_BOARD_$(BOARD)
	endif

	ifdef EMULATOR
		CFPGA_FLAGS += -march=emulator
		CFLAGS += -DEMULATOR
	endif

	ifdef ARM
		OPENCL_INC=$(shell aocl compile-config --arm) -Icommon/inc
		OPENCL_LIB=$(shell aocl link-config --arm)
		CROSS_COMPILER = arm-linux-gnueabihf-
		CC = $(CROSS_COMPILER)gcc
		CXX = $(CROSS_COMPILER)g++
	endif

	PROFILE_SUFFIX = 
	ifeq ($(PROFILE),1)
	      CFPGA_FLAGS += --profile
	      PROFILE_SUFFIX = _PROFILE
	endif
endif

ifeq ($(USE_JIT),1)
	OPENCL_MACROS += -DUSE_JIT
else
	OPENCL_MACROS += -DUSE_AOT
endif

OPENCL_INC += $(OPENCL_MACROS)

### Power ###

# Nvidia NVML from CUDA Toolkit for Nvidia GPU power measurement, CUDA_DIR must be defined in bashrc
NVML_INC = -I$(CUDA_DIR)/include
NVML_LIB = -L$(CUDA_DIR)/lib64/stubs -lnvidia-ml

# Bittware BmcLib for power measurement on Bittware FPGA boards
# BITTWARE_TOOLKIT must be defined in bashrc and point to Bittware II Toolkit
BITTWARE_INC = -I$(BITTWARE_TOOLKIT)/include -I$(BITTWARE_SDK)/include/resources
BITTWARE_LIB = -L$(BITTWARE_TOOLKIT) -lbwhil -lbmclib
BITTWARE_FLAGS = -fopenmp -DLINUX -DAOCL_BOARD_a10pl4_dd4gb_gx115
ifeq ($(BOARD),a10pl4_dd4gb_gx115)
	CFLAGS += $(BITTWARE_INC) $(BITTWARE_LIB) $(BITTWARE_FLAGS)
	CXXFLAGS += $(BITTWARE_INC) $(BITTWARE_LIB) $(BITTWARE_FLAGS)
endif

# Power measurement on Nallatech FPGA boards
# AOCL_BOARD_PACKAGE_ROOT should point to a Nallatech BSP that includes the aocl_mmd.h header
NALLATECH_INC = -I$(AOCL_BOARD_PACKAGE_ROOT)/software/include
NALLATECH_FLAGS = -fopenmp -DLINUX -DAOCL_BOARD_p385a_sch_ax115
ifeq ($(BOARD),p385a_sch_ax115)
	CFLAGS += $(NALLATECH_INC) $(NALLATECH_FLAGS)
	CXXFLAGS += $(NALLATECH_INC) $(NALLATECH_FLAGS)
endif


%.aoco : %.cl
	$(RM) $*
	$(CFPGA) -c $< $(CFPGA_FLAGS)
	
%.aocx: %.aoco
	$(CFPGA) $< $(CFPGA_FLAGS)
ifndef EMULATOR
	cd $(*F); quartus_pow top.qpf; cd ..
endif

CFPGA_FLAGS += $(DEFINE_MACROS) $(OPENCL_MACROS)

%.o : %.cu
	$(CUDA_CC) -c $< $(CUDA_FLAGS) $(NVML_INC) -o $@

CUDA_FLAGS += $(DEFINE_MACROS) $(CUDA_MACROS)
